function Node(e){this.data=e,this.parent=null,this.children=[]}function Tree(e){var t=new Node(e);this._root=t}function TreeComponent(e,t){this.tree=null,this.template=t,this.initTree(e),this.render(t)}function Animation(){this.queue=[]}Tree.prototype.traverseDF=function(e){!function t(n){n.children.forEach(function(e){t(e)}),e(n)}(this._root)},Tree.prototype.traverseBF=function(e){var t=[];for(t.push(this._root),currentTree=t.shift();currentTree;)currentTree.children.forEach(function(e){t.push(e)}),e(currentTree),currentTree=t.shift()},Tree.prototype.contains=function(e,t){t.call(this,e)},Tree.prototype.add=function(e,t,n){var r=new Node(e),i=null,o=function(e){e.data===t&&(i=e)};if(this.contains(o,n),!i)throw new Error("Cannot add node to a non-existent parent.");i.children.push(r),r.parent=i},Tree.prototype.remove=function(e,t,n){function r(e,t){var n;return e.forEach(function(e,r){e.data===t&&(n=r)}),n}var i,o=null,a=null,c=function(e){e.data===t&&(o=e)};if(this.contains(c,n),!o)throw new Error("Parent does not exist.");if(i=r(o.children,e),void 0===i)throw new Error("Node to remove does not exist.");return a=o.children.splice(i,1)};var treeData={data:"one",children:[{data:"two",children:[{data:"five",children:[]},{data:"six",children:[]},{data:"seven",children:[]}]},{data:"three",children:[]},{data:"four",children:[{data:"eight",children:[]},{data:"nine",children:[]}]}]},template={root:'<div class="node-data"></div><ul class="node-children"></ul>',element:'<li><div class="node-data"></div><ul class="node-children"></ul></li>',render:function(e){var t=document.createElement("div"),n=document.createDocumentFragment();return t.innerHTML=this[e],Array.from(t.children).forEach(function(e){n.appendChild(e)}),{html:n,title:n.querySelector(".node-data"),container:n.querySelector(".node-children")}}};TreeComponent.prototype.initTree=function(e){var t=this;!function n(e,r){r?t.tree.add(e.data,r.data,t.tree.traverseBF):t.tree=new Tree(e.data),e.children.length&&e.children.forEach(function(t){n(t,e)})}(e)},TreeComponent.prototype.render=function(){var e=document.querySelector("#tree-container");e.innerHTML="",this.tree.traverseBF(function(t){var n,r;t.parent?(n=t.parent._dom.container,r="element"):(n=e,r="root"),t._dom=this.template.render(r),t._dom.title.innerHTML=t.data,n.appendChild(t._dom.html)})},TreeComponent.prototype.traversal=function(e){this.render(),tree.animate=new Animation,this.tree[e](function(e){tree.animate.queue.push(e)}),tree.animate.start(this.draw).then(this.render.bind(this))},TreeComponent.prototype.draw=function(e,t){t&&t._dom.title.classList.remove("highlight"),e._dom.title.classList.add("highlight")},Animation.prototype.start=function(e){var t,n,r=this;return r.promise=new Promise(function(i){r.timer=setTimeout(function o(){r.queue.length?(n=t,t=r.queue.shift(),e(t,n),r.timer=setTimeout(o,500)):(r.stop(),i(t))},500)}),r.promise},Animation.prototype.stop=function(){clearTimeout(this.timer),this.timer=null};var tree=new TreeComponent(treeData,template);document.querySelector("#dfc").addEventListener("click",function(){tree.animate&&(tree.animate.stop(),tree.animate=null),tree.traversal("traverseDF")}),document.querySelector("#bfc").addEventListener("click",function(){tree.animate&&(tree.animate.stop(),tree.animate=null),tree.traversal("traverseBF")});